#include <Adafruit_NeoPixel.h>

#include <Adafruit_NeoPixel.h>
long unsigned int pause = 5000;
boolean lockLow = true;
boolean takeLowTime;
#define NUM_LEDS
Adafruit_NeoPixel strip = Adafruit_NeoPixel(150, 11, NEO_RGB + NEO_KHZ800);

int motionPin = 8;     // PIR Input pin 8, UPSTAIRS
int motionPin2 = 7;    // PIR 2 Input pin 7, DOWNSTAIRS
int senseMotion = 0;   // variable to hold current state of motion detector
int senseMotion2 = 0;  // 2nd variable for 2nd sensor
#define Fire

void setup() {
  // put your setup code here, to run once:
  strip.begin();
  strip.show();  // Initialize all pixels to 'off'
}



void loop() {

  senseMotion = digitalRead(motionPin);  //set variables equal to what our sensors are reading (on or off)
  senseMotion2 = digitalRead(motionPin2);

  if (senseMotion == HIGH || senseMotion2 == HIGH)  // Testing both sensors at same time, if high, go to apropriate line.

    if (senseMotion2 == HIGH)
      ;
  {

    Fire(55, 120, 15);


  
   void Fire( {
      (int Cooling, int Sparking, int SpeedDelay)); static byte heat[NUM_LEDS];
      int cooldown;

      // Step 1.  Cool down every cell a little
      for (int i = 0; i < NUM_LEDS; i++) {
        cooldown = random(0, ((Cooling * 10) / NUM_LEDS) + 2);

        if (cooldown > heat[i]) {
          heat[i] = 0;
        } else {
          heat[i] = heat[i] - cooldown;
        }
      }

      // Step 2.  Heat from each cell drifts 'up' and diffuses a little
      for (int k = NUM_LEDS - 1; k >= 2; k--) {
        heat[k] = (heat[k - 1] + heat[k - 2] + heat[k - 2]) / 3;
      }

      // Step 3.  Randomly ignite new 'sparks' near the bottom
      if (random(255) < Sparking) {
        int y = random(7);
        heat[y] = heat[y] + random(160, 255);
        //heat[y] = random(160,255);
      }

      // Step 4.  Convert heat to LED colors
      for (int j = 0; j < NUM_LEDS; j++) {
        setPixelHeatColor(j, heat[j]);
      }

      showStrip();
      delay(SpeedDelay);
    }

    void setPixelHeatColor(int Pixel, byte temperature) {
      // Scale 'heat' down from 0-255 to 0-191
      byte t192 = round((temperature / 255.0) * 191);

      // calculate ramp up from
      byte heatramp = t192 & 0x3F;  // 0..63
      heatramp <<= 2;               // scale up to 0..252

      // figure out which third of the spectrum we're in:
      if (t192 > 0x80) {  // hottest
        setPixel(Pixel, 255, 255, heatramp);
      } else if (t192 > 0x40) {  // middle
        setPixel(Pixel, 255, heatramp, 0);
      } else {  // coolest
        setPixel(Pixel, heatramp, 0, 0);
      }
    }
    if (senseMotion == HIGH) {
      void meteorRain(0xff, 0xff, 0xff, 10, 64, true, 30);
    }

    void meteorRain(byte red, byte green, byte blue, byte meteorSize, byte meteorTrailDecay, boolean meteorRandomDecay, int SpeedDelay) {
      setAll(0, 0, 0);

      for (int i = 0; i < NUM_LEDS + NUM_LEDS; i++) {


        // fade brightness all LEDs one step
        for (int j = 0; j < NUM_LEDS; j++) {
          if ((!meteorRandomDecay) || (random(10) > 5)) {
            fadeToBlack(j, meteorTrailDecay);
          }
        }

        // draw meteor
        for (int j = 0; j < meteorSize; j++) {
          if ((i - j < NUM_LEDS) && (i - j >= 0)) {
            setPixel(i - j, red, green, blue);
          }
        }

        showStrip();
        delay(SpeedDelay);
      }
    }

    void fadeToBlack(int ledNo, byte fadeValue) {
#ifdef ADAFRUIT_NEOPIXEL_H
      // NeoPixel
      uint32_t oldColor;
      uint8_t r, g, b;
      int value;

      oldColor = strip.getPixelColor(ledNo);
      r = (oldColor & 0x00ff0000UL) >> 16;
      g = (oldColor & 0x0000ff00UL) >> 8;
      b = (oldColor & 0x000000ffUL);

      r = (r <= 10) ? 0 : (int)r - (r * fadeValue / 256);
      g = (g <= 10) ? 0 : (int)g - (g * fadeValue / 256);
      b = (b <= 10) ? 0 : (int)b - (b * fadeValue / 256);

      strip.setPixelColor(ledNo, r, g, b);
#endif
#ifndef ADAFRUIT_NEOPIXEL_H
      // FastLED
      leds[ledNo].fadeToBlackBy(fadeValue);
#endif
    }

    else {                           // no motion = no lights or animate til off
      digitalWrite(motionPin, LOW);  //turning motion pins low, doesnt seem to make a difference either.
      digitalWrite(motionPin2, LOW);
      TwinkleRandom(20, 100, false);
    }

    void TwinkleRandom(int Count, int SpeedDelay, boolean OnlyOne) {
      setAll(0, 0, 0);

      for (int i = 0; i < Count; i++) {
        setPixel(random(NUM_LEDS), random(0, 255), random(0, 255), random(0, 255));
        showStrip();
        delay(SpeedDelay);
        if (OnlyOne) {
          setAll(0, 0, 0);
        }
      }

      delay(SpeedDelay);
    })
  }
}

void showStrip() {
#ifdef ADAFRUIT_NEOPIXEL_H
  // NeoPixel
  strip.show();
#endif
#ifndef ADAFRUIT_NEOPIXEL_H
  // FastLED
  FastLED.show();
#endif
}
void setPixel(int Pixel, byte red, byte green, byte blue) {
#ifdef ADAFRUIT_NEOPIXEL_H
  // NeoPixel
  strip.setPixelColor(Pixel, strip.Color(red, green, blue));
#endif
#ifndef ADAFRUIT_NEOPIXEL_H
  // FastLED
  leds[Pixel].r = red;
  leds[Pixel].g = green;
  leds[Pixel].b = blue;
#endif
}

void setAll(byte red, byte green, byte blue) {
  for (int i = 0; i < NUM_LEDS i++); {
    setPixel(i, red, green, blue);
  }
  showStrip();
}
